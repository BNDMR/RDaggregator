% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grouping.R
\name{group_by.orpha_df}
\alias{group_by.orpha_df}
\title{Build group using Orphanet classifications}
\usage{
\method{group_by}{orpha_df}(.data, ...)
}
\arguments{
\item{.data}{An \code{\link[=orpha_df]{orpha_df()}} instantiation.}

\item{...}{In \code{group_by()}, variables or computations to group by.
Computations are always done on the ungrouped data frame.
To perform computations on the grouped data, you need to use
a separate \code{mutate()} step before the \code{group_by()}.
Computations are not allowed in \code{nest_by()}.
In \code{ungroup()}, variables to remove from the grouping.}
}
\description{
This is a method for the dplyr \code{\link[=group_by]{group_by()}} generic. It extends initial groups by adding
rows containing descendants ORPHAcodes. This way any row may belong to several groups.

The function will force the creation of groups (they may be empty) for any ORPHAcode provided
in \code{force_codes} argument when \code{\link[=orpha_df]{orpha_df()}} is called.
}
\examples{
library(dplyr)

# Build patients data.frame
df_patients = data.frame(
  patient_id = c(1,2,3,4,5,6),
  group = c('A','A','A','B','B','B'),
  code = c('158673', '595356', '305', '79406', '79406', '595356'))

df_counts = df_patients \%>\% group_by(code)
attr(df_counts, 'groups')

df_counts = df_patients \%>\% orpha_df(orpha_code_col = 'code') \%>\% group_by(code)
attr(df_counts, 'groups')

df_counts = df_patients \%>\% orpha_df(orpha_code_col = 'code') \%>\% group_by(code, group)
attr(df_counts, 'groups')

}
