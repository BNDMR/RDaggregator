% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deduplication.R
\name{group_by_code}
\alias{group_by_code}
\title{A common group_by operation to take descendants of the present Orpha codes into account in the aggregation.}
\usage{
group_by_code(
  .data,
  ...,
  class_data = NULL,
  include_descendants = TRUE,
  force_nodes = NULL,
  code_col = "code"
)
}
\arguments{
\item{.data}{The data consider}

\item{...}{Additional parameters to transmit to the dplyr group_by function}

\item{class_data}{The classification data to consider. If NULL, automatically search a classification for each code}

\item{include_descendants}{If TRUE (default), for each code every descendants of this code are included in its group}

\item{force_nodes}{function usually uses Orpha codes present in the original dataframe only,
but you can force aggregation on some additional nodes here}

\item{code_col}{default 'code', Orpha codes column name}
}
\value{
Results of the group_by operation
}
\description{
A common group_by operation to take descendants of the present Orpha codes into account in the aggregation.
}
\examples{
library(magrittr)
library(dplyr)
df_patients = data.frame(patient_id = c(1,1,2,3,4,5,6),
                         code = c('303', '158673', '595356', '305', '79406', '79406', '595356'))
df_counts = df_patients \%>\% group_by(code) \%>\% count() \%>\% as.data.frame() # Naive counting
df_counts = df_patients \%>\% group_by_code() \%>\% count() \%>\% as.data.frame() # New method - Without deduplication
df_counts = df_patients \%>\% group_by_code() \%>\% summarize(n = n_distinct(patient_id)) \%>\% as.data.frame() # New method - With deduplication
}
